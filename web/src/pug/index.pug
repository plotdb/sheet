extends /base.pug
block prehead
  base(href=".")
block head
  +css("assets/lib/@plotdb/sheet/dev/index.min.css")
  style(type="text/css"): :stylus
    /* if swipe back happens once, it then always triggered even in container with overscroll-behavior: contain.
    enforce this on body may solve this issue.
    https://bugs.chromium.org/p/chromium/issues/detail?id=889846
    https://bugs.chromium.org/p/chromium/issues/detail?id=862693
    https://bugs.chromium.org/p/chromium/issues/detail?id=906886
    https://community.airtable.com/t/3074
    */
    body { overscroll-behavior: contain }
    [ld=menu] {
      position: absolute;
    }
block body
  .ldcv(ld="ldcv",data-name="selection"): .base.w-640.rwd: .inner.p-4
    textarea.form-control.mb-4(ld="textarea",rows="7")
    .btn.btn-lg.btn-primary(data-ldcv-set="") Close
  .p-4: .mx-auto.rwd.w-640
    .d-flex.g-2.mb-2
      .btn.btn-sm.btn-outline-secondary(ld="clear") Clear Selection
      .btn.btn-sm.btn-outline-secondary(ld="range") Select Range
      .btn.btn-sm.btn-outline-secondary(ld="row") Select Row 3
      .btn.btn-sm.btn-outline-secondary(ld="col") Select Col 3
      .btn.btn-sm.btn-outline-secondary(ld="all") Select All
      .btn.btn-sm.btn-outline-secondary(ld="cur") Show Current Selection
    .aspect-ratio.ratio-1by1
      #root.shadow-sm.border.border-secondary.rounded
  .dropdown-menu.shadow-sm(ld="menu")
    .dropdown-item(ld="del") Del Row/Col
    .dropdown-item(ld="ins") Ins Row/Col


block script
  +script("https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.1/papaparse.min.js")
  +script("assets/lib/@plotdb/sheet/dev/index.min.js")
  script(type="module"): :lsc
    app = {}
    <-(->it.apply {}) _
    ldcv = {}
    view = new ldview do
      root: document.body
      init: ldcv: ({node}) -> ldcv[node.getAttribute(\data-name)] = new ldcover root: node, resident: true
      action: click:
        clear: -> s.select null
        range: -> s.select {row: 1, col: 1, rowspan: 3, colspan: 2}
        row: -> s.select {row: 2}
        col: -> s.select {col: 2}
        all: -> s.select {}
        del: -> s.slice!
        ins: -> s.insert!
        cur: ->
          app.selection = s.select!
          ldcv.selection.toggle!
          view.render \textarea
      handler:
        textarea: ({node}) ->
          node.value = JSON.stringify((app.selection or null), 4, ' ')
    node =
      type: \dom
      node: div = document.createElement(\div)
    div.setAttribute \class, "d-flex w-100 justify-content-between h-100 align-items-center"
    div.innerHTML = """
    <div>sample</div>
    <div>&times;</div>
    """
    div.addEventListener \click, -> console.log \hi, it.target
    s = new sheet do
      root: '#root'
      size:
        col: [48,64,92,128].map -> "#{it}px"
        row: [48,64,92,128].map -> "#{it}px"
      data: [
        [2,3,node],
        [5,6,7,8],
        [9,10,11,12],
        [13,14,15,16]
      ]
      idx: {row: true, col: true}
      #fixed: {row: 2, col: 2}
      #frozen: {row: 2, col: 2}
    s.on \change, -> console.log it
    c = s.cell {x: 1, y: 1}
    console.log c
    s.on \menu.on, ({evt, node}) ->
      if !(node.classList.contains \idx) => return
      m = view.get(\menu)
      m.style.top = "#{evt.clientY}px"
      m.style.left = "#{evt.clientX}px"
      m.classList.toggle \show, true
      evt.preventDefault!
      evt.stopPropagation!
    s.on \menu.off, ({evt, node}) ->
      m = view.get(\menu)
      m.classList.toggle \show, false
      evt.preventDefault!
      evt.stopPropagation!

    /*
    c.innerHTML = """
    <div class="dropdown">
    <div class="btn btn-sm btn-primary dropdown-toggle" data-toggle="dropdown">click me</div>
    </div>
    """
    */
